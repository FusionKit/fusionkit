See https://gafusion.github.io/doc/tglf/tglf_table.html
--------------------------------------------------------
This is a quick tutorial on how to use Fusionkit for a TGLF run.
In this example, we will change the value of 'RLTS_1'.
--------------------------------------------------------


import fusionkit    				      #Import the fusionkit module.
		                                      #If ModuleNotFoundError: No module named 'fusionkit' do:
						      #  In [1]: import sys
				 		      #  In [2]: sys.path.append("/home/.../fusionkit")

test = fusionkit.TGLF()                               #Make an object of the tglf class named 'test'

test.metadata['run_path'] = '/home/.../repertory/'    #Set the run path. 
						      #If 'repertory' do not exist, it will make a directory 
						      #called 'repertory' in the run path that was set,
						      #overwise it will 'link' the object test to the values inside 'repertory'.

test.input['RLTS_1'] = 12.                            #Set the value of 'RLTS_1' in the input file

test.write_input()                                    #Write the changed inputs in the file'/home/.../repertory/input.tglf'

test.run(eigenfunctions=True)	                      #Run the simulation
						      #The outputs will be available in test.outputs





--------------------------------------------------------
To make a scan, one can use the run_1d_scan module.
In this example, we will make a scan in 'RLTS_1'.
--------------------------------------------------------


test = fusionkit.TGLF()

test.metadata['run_path'] = '/home/.../repertory/'

run.run_1d_scan(var='RLTS_1',values=[3,4,5,6])	      #Run multiple simulations for different values of 
						      #'RLTS_1' and store the results of the simulation
						      # where 'run_path' is equal to X in:
						      #   test.outputs['scans']['RLTS_1'][X]

